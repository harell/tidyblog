on:
  push:
    branches:
      - master
      - release/*
      - hotfix/*

name: blogdown

env:
  isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}

jobs:
  blogdown:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      # - uses: r-lib/actions/setup-tinytex@v1

      - name: Prepare
        run: |
          echo "utils::chooseCRANmirror(graphics=FALSE, ind = 1)" > .Rprofile
          Rscript -e "if(!'remotes' %in% rownames(utils::installed.packages())) utils::install.packages('remotes')"
      - name: Query dependencies
        run: |
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_cran(c("tidyverse"))
          remotes::install_cran(c("devtools", "blogdown"))
          remotes::update_packages("blogdown")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Install Hugo
        run: |
          blogdown::install_hugo()
        shell: Rscript {0}

      - name: Build blog
        run: |
          options(blogdown.files_filter = blogdown:::filter_md5sum)
          print(list.files('./vignettes', all.files = TRUE, recursive = TRUE))

        shell: Rscript {0}

      - name: Deploy to Netlify
        if: contains(env.isExtPR, 'false')
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1.11
        with:
          publish-dir: './vignettes/public'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          enable-pull-request-comment: false
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
